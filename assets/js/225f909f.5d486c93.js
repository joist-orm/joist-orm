"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[703],{7816:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>l,frontMatter:()=>s,metadata:()=>a,toc:()=>d});var r=n(4246),o=n(1670);const s={title:"Properties Transform",sidebar_position:35},i=void 0,a={id:"advanced/transform-properties",title:"Properties Transform",description:"A key feature of Joist is defining custom properties on your domain model, i.e. hasOneThrough, hasManyThrough, hasAsyncProperty, hasReactiveField, etc.",source:"@site/docs/advanced/transform-properties.md",sourceDirName:"advanced",slug:"/advanced/transform-properties",permalink:"/docs/advanced/transform-properties",draft:!1,unlisted:!1,editUrl:"https://github.com/joist-orm/joist-orm/edit/main/docs/docs/advanced/transform-properties.md",tags:[],version:"current",sidebarPosition:35,frontMatter:{title:"Properties Transform",sidebar_position:35},sidebar:"tutorialSidebar",previous:{title:"Full Text Search",permalink:"/docs/advanced/full-text-search"},next:{title:"graphql-filters",permalink:"/docs/advanced/graphql-filters"}},c={},d=[];function h(e){const t={a:"a",code:"code",p:"p",pre:"pre",...(0,o.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(t.p,{children:["A key feature of Joist is defining custom properties on your domain model, i.e. ",(0,r.jsx)(t.code,{children:"hasOneThrough"}),", ",(0,r.jsx)(t.code,{children:"hasManyThrough"}),", ",(0,r.jsx)(t.code,{children:"hasAsyncProperty"}),", ",(0,r.jsx)(t.code,{children:"hasReactiveField"}),", etc."]}),"\n",(0,r.jsx)(t.p,{children:"While these properties are powerful, Joist's current API involves defining them as properties directly on each instance of an entity, i.e.:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ts",children:"export class Author extends AuthorCodegen {\n  readonly reviews: Collection<Author, BookReview> = hasManyThrough((a) => a.books.reviews);\n}\n"})}),"\n",(0,r.jsxs)(t.p,{children:["This means that if you load 1,000 ",(0,r.jsx)(t.code,{children:"Author"})," rows from the database, there will be 1,000 ",(0,r.jsx)(t.code,{children:"hasManyThrough"})," relations initialized, even if this particular endpoint/codepath doesn't end up accessing them."]}),"\n",(0,r.jsx)(t.p,{children:"In the majority of scenarios, this is fine, but when loading ~1,000s of entities, it can become a performance issue."}),"\n",(0,r.jsxs)(t.p,{children:["To address this, Joist provides a ",(0,r.jsx)(t.a,{href:"https://github.com/nonara/ts-patch",children:"ts-patch"})," transformer that will rewrite the fields into lazy getters on the ",(0,r.jsx)(t.code,{children:"Author"})," prototype."]}),"\n",(0,r.jsxs)(t.p,{children:["To enable this, add the following to your ",(0,r.jsx)(t.code,{children:"tsconfig.json"}),":"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-json",children:'{\n  "compilerOptions": {\n    "plugins": [\n      { "transform": "joist-transform-properties", "type": "raw" }\n    ]\n  }\n}\n'})}),"\n",(0,r.jsxs)(t.p,{children:["And then compile your production code with ",(0,r.jsx)(t.code,{children:"tspc"})," instead of the raw ",(0,r.jsx)(t.code,{children:"tsc"})," command."]})]})}function l(e={}){const{wrapper:t}={...(0,o.a)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},1670:(e,t,n)=>{n.d(t,{Z:()=>a,a:()=>i});var r=n(7378);const o={},s=r.createContext(o);function i(e){const t=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),r.createElement(s.Provider,{value:t},e.children)}}}]);