"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4705],{855:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>d,default:()=>l,frontMatter:()=>r,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"features/changed-fields","title":"Changed Fields","description":"Each entity tracks which of its fields has changed within the current unit of work/EntityManager:","source":"@site/docs/features/changed-fields.md","sourceDirName":"features","slug":"/features/changed-fields","permalink":"/docs/features/changed-fields","draft":false,"unlisted":false,"editUrl":"https://github.com/joist-orm/joist-orm/edit/main/docs/docs/features/changed-fields.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"title":"Changed Fields","sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"Find Queries","permalink":"/docs/features/queries-find"},"next":{"title":"Cascading Deletes","permalink":"/docs/features/cascade-deletes"}}');var i=t(2540),a=t(3023);const r={title:"Changed Fields",sidebar_position:4},d=void 0,c={},o=[{value:"Audit Trails",id:"audit-trails",level:3}];function h(e){const n={a:"a",code:"code",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:["Each entity tracks which of its fields has changed within the current unit of work/",(0,i.jsx)(n.code,{children:"EntityManager"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:'const a1 = em.load(Author, "1");\n\n// Nothing has changed at first\nexpect(a1.changes.firstName.hasChanged).toBe(false);\n\n// Now perform some business logic\na1.firstName = "a2";\n\n// And the field shows up has changed\nexpect(a1.changes.firstName.hasChanged).toBe(true);\nexpect(a1.changes.firstName.originalValue).toEqual("a1");\n'})}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"changes"})," API has three methods:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"changes.firstName.hasChanged"})," - is ",(0,i.jsx)(n.code,{children:"true"})," whenever ",(0,i.jsx)(n.code,{children:"firstName"})," has been set, either on a new entity or an existing entity"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"changes.firstName.hasUpdated"})," - is ",(0,i.jsx)(n.code,{children:"true"})," only when ",(0,i.jsx)(n.code,{children:"firstName"})," has been changed on an existing entity"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"changes.firstName.originalValue"})," - is the original value, only for an existing entity"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"audit-trails",children:"Audit Trails"}),"\n",(0,i.jsxs)(n.p,{children:["Note the ",(0,i.jsx)(n.code,{children:"changes"})," API is only for the current in-memory changes being made to an entity, it's not an audit trail."]}),"\n",(0,i.jsxs)(n.p,{children:["That said, Joist entities can be used with 3rd-party audit trail solutions like ",(0,i.jsx)(n.a,{href:"https://pgxn.org/dist/cyanaudit/",children:"CyanAudit"}),"."]})]})}function l(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},3023:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>d});var s=t(3696);const i={},a=s.createContext(i);function r(e){const n=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);