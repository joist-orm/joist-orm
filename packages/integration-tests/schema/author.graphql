type Author {
  id: ID!
  firstName: String!
  lastName: String
  initials: String!
  numberOfBooks: Int!
  isPopular: Boolean
  age: Int
  wasEverPopular: Boolean
  createdAt: Date!
  updatedAt: Date!
  mentor: Author
  publisher: Publisher
  authors: [Author!]!
  books: [Book!]!
  image: Image
  graduated: Date
}

input SaveAuthorInput {
  id: ID
  firstName: String
  lastName: String
  initials: String
  numberOfBooks: Int
  isPopular: Boolean
  age: Int
  wasEverPopular: Boolean
  createdAt: Date
  updatedAt: Date
  mentorId: ID
  publisherId: ID
  graduated: Date
}

type SaveAuthorResult {
  author: Author!
}

extend type Mutation {
  saveAuthor(input: SaveAuthorInput!): SaveAuthorResult!
}
